package znyk.kufang;

import java.rmi.RemoteException;
import java.util.Vector;

import javax.xml.rpc.ServiceException;

import localhost.GD_wsdl.GDLocator;
import znyk.common.ClientSer;
import znyk.common.SqlPro;
import znyk.plc.PLC;
import znyk.server.SqlTool;

public class KuFang {
	
public void startLine(){
	//更新托盘在7条输送线上的位置
	
	 try{
	String ss= ClientSer.getIntance().getGD().getState(SqlPro.A区输送线);
	String sm[]=ss.split("|");
	String sql1= "select  货位序号,托盘编号   from 货位表  where  货位序号  between 501 and 514 order by 货位序号";
	String sql2= "select  货位序号,托盘编号   from 货位表  where  货位序号  between 601 and 614 order by 货位序号";
	Vector<Vector> tem1=SqlTool.findInVector(sql1);
	Vector<Vector> tem2=SqlTool.findInVector(sql2);
   
	for(int r=0;r<tem1.size();r++){
		Vector line1=tem1.get(r*2);
		Vector line2=tem1.get(r*2+1);
		String firstTP=line1.get(1)==null?"":line1.get(1).toString();
		String secTP=line2.get(1)==null?"":line2.get(1).toString();
		if(secTP.equals("")){
			if(sm[r*2+1].equals("0")){
				String fromID=line1.get(0)+"";
				String toID=line2.get(0)+"";
				SqlTool.update7Line(firstTP, fromID, toID);
			}
			
		 }
		
	 } 
	
	for(int r=0;r<tem2.size();r++){
		Vector line1=tem2.get(r*2);
		Vector line2=tem2.get(r*2+1);
		String firstTP=line1.get(1)==null?"":line1.get(1).toString();
		String secTP=line2.get(1)==null?"":line2.get(1).toString();
		if(secTP.equals("")){
			if(sm[r*2+1].equals("0")){
				String fromID=line1.get(0)+"";
				String toID=line2.get(0)+"";
				SqlTool.update7Line(firstTP, fromID, toID);
			}
			
		 }
		
	 } 
	}catch(Exception ex){}
	
}

public void start堆垛机指令(){
	
	 Vector 堆1上=SqlTool.findInVector("select idEvent,来源,任务类别,动作,托盘编号,来源货位号,放回货位号,请求区,状态,状态2 from 立库动作指令  where 状态<>'完成' and 动作='上货' and 请求区= '1' order by idEvent");
     Vector 堆1下=SqlTool.findInVector("select idEvent,来源,任务类别,动作,托盘编号,来源货位号,放回货位号,请求区,状态,状态2 from 立库动作指令  where 状态<>'完成' and 动作='下货' and 请求区= '1' order by idEvent");
    
     boolean run=false;
     int last1=1;
     if(堆1上.size()>0){
    	 //首先判断当前指令有没有在执行中，如果有，那么就不在发送
    	 Vector up=(Vector)堆1上.get(0);
    	 if(up.get(8).equals("执行中")||up.get(8).equals("已发送")){run=true;}
      }
     
     if(堆1下.size()>0){
    	 //首先判断当前指令有没有在执行中，如果有，那么就不在发送
    	 Vector down=(Vector)堆1下.get(0);
    	 if(down.get(8).equals("执行中")||down.get(8).equals("已发送")){run=true;}
      
     }
    //如果这个堆垛机没有执行的指令，那么继续 
    if(last1==1){//上货
    if(!run) {
    	//如果没有运行中的指令,那么就优先上料，上完料了在看看有没有下货的指令，如果有运行下货
    	
    	try {
			String state=ClientSer.getIntance().getGD().getState(2);//获取堆垛机1的状态
			if(state.equals("1")){
				 if(堆1上.size()>0){
			    	 //首先判断当前指令有没有在执行中，如果有，那么就不在发送
			    	 Vector up=(Vector)堆1上.get(0);
			    	 String eventID=up.get(0).toString();
			    	 String fromID=up.get(5).toString();
			    	 String toID=up.get(6).toString();
			    	 ClientSer.getIntance().getGD().upPallet(Integer.parseInt(eventID), 
			    			 Integer.parseInt(fromID), Integer.parseInt(toID), 1);
			    	 String sql2="update 立库动作指令  set 状态='已发送',发送时间="+SqlPro.getDate()[1]+" where idEvent="+"'"+eventID+"'"; 
			    	 SqlTool.insert(new String[]{sql2});
			      }
				
			}
		   } catch (Exception e) {}
    	last1=2;
       }
	
  }
    if(last1==2){//下货
        if(!run) {
        	//如果没有运行中的指令,那么就优先上料，上完料了在看看有没有下货的指令，如果有运行下货
        	
        	try {
    			String state=ClientSer.getIntance().getGD().getState(2);//获取堆垛机1的状态
    			if(state.equals("1")){
    				//首先判断当前指令有没有在执行中，如果有，那么就不在发送
			    	 Vector up=(Vector)堆1下.get(0);
			    	 String eventID=up.get(0).toString();
			    	 String fromID=up.get(5).toString();
			    	 String toID=up.get(6).toString();
			    	 ClientSer.getIntance().getGD().getPallet(Integer.parseInt(eventID), 
			    			 fromID, Integer.parseInt(toID), 1);
			    	 String sql2="update 立库动作指令  set 状态='已发送',发送时间="+SqlPro.getDate()[1]+" where idEvent="+"'"+eventID+"'"; 
			    	 SqlTool.insert(new String[]{sql2});
    				
    			}
    		   } catch (Exception e) {}
        	last1=1;
           }
    	
      }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    
    Vector 堆2上=SqlTool.findInVector("select idEvent,来源,任务类别,动作,托盘编号,来源货位号,放回货位号,请求区,状态,状态2 from 立库动作指令  where 状态<>'完成' and 动作='上货' and 请求区= '2' order by idEvent");
    Vector 堆2下=SqlTool.findInVector("select idEvent,来源,任务类别,动作,托盘编号,来源货位号,放回货位号,请求区,状态,状态2 from 立库动作指令  where 状态<>'完成' and 动作='下货' and 请求区= '2' order by idEvent");
    
    boolean run2=false;
    int last2=1;
    if(堆2上.size()>0){
   	 //首先判断当前指令有没有在执行中，如果有，那么就不在发送
   	 Vector up=(Vector)堆2上.get(0);
   	 if(up.get(8).equals("执行中")||up.get(8).equals("已发送")){run2=true;}
     }
    
    if(堆2下.size()>0){
   	 //首先判断当前指令有没有在执行中，如果有，那么就不在发送
   	 Vector down=(Vector)堆2下.get(0);
   	 if(down.get(8).equals("执行中")||down.get(8).equals("已发送")){run2=true;}
     
    }
   //如果这个堆垛机没有执行的指令，那么继续 
   if(last2==1){//上货
   if(!run2) {
   	//如果没有运行中的指令,那么就优先上料，上完料了在看看有没有下货的指令，如果有运行下货
   	
   	try {
			String state=ClientSer.getIntance().getGD().getState(3);//获取堆垛机2的状态
			if(state.equals("1")){
				 if(堆2上.size()>0){
			    	 //首先判断当前指令有没有在执行中，如果有，那么就不在发送
			    	 Vector up=(Vector)堆2上.get(0);
			    	 String eventID=up.get(0).toString();
			    	 String fromID=up.get(5).toString();
			    	 String toID=up.get(6).toString();
			    	 ClientSer.getIntance().getGD().upPallet(Integer.parseInt(eventID), 
			    			 Integer.parseInt(fromID), Integer.parseInt(toID), 2);
			    	 String sql2="update 立库动作指令  set 状态='已发送',发送时间="+SqlPro.getDate()[1]+" where idEvent="+"'"+eventID+"'"; 
			    	 SqlTool.insert(new String[]{sql2});
			      }
				
			}
		   } catch (Exception e) {}
   	last2=2;
      }
	
 }
   if(last2==2){//下货
       if(!run2) {
       	//如果没有运行中的指令,那么就优先上料，上完料了在看看有没有下货的指令，如果有运行下货
       	
       	try {
   			String state=ClientSer.getIntance().getGD().getState(3);//获取堆垛机2的状态
   			if(state.equals("1")){
   				//首先判断当前指令有没有在执行中，如果有，那么就不在发送
			    	 Vector up=(Vector)堆2下.get(0);
			    	 String eventID=up.get(0).toString();
			    	 String fromID=up.get(5).toString();
			    	 String toID=up.get(6).toString();
			    	 ClientSer.getIntance().getGD().getPallet(Integer.parseInt(eventID), 
			    			 fromID, Integer.parseInt(toID), 2);
			    	 String sql2="update 立库动作指令  set 状态='已发送',发送时间="+SqlPro.getDate()[1]+" where idEvent="+"'"+eventID+"'"; 
			    	 SqlTool.insert(new String[]{sql2});
   				
   			}
   		   } catch (Exception e) {}
       	last2=1;
          }
   	
     } 
    
     }

public void startlineAGV(){
	
	 Vector 堆1上=SqlTool.findInVector("select idEvent,来源,任务类别,动作,托盘编号,来源货位号,放回货位号,请求区,状态,状态2 from 立库动作指令  where 状态<>'完成' and 动作='输送线回流' and 请求区= '1' order by idEvent");
     Vector 堆2上=SqlTool.findInVector("select idEvent,来源,任务类别,动作,托盘编号,来源货位号,放回货位号,请求区,状态,状态2 from 立库动作指令  where 状态<>'完成' and 动作='输送线回流' and 请求区= '2' order by idEvent");
   
    boolean run=false;
    boolean run2=false;
   
    if(堆1上.size()>0){
   	 //首先判断当前指令有没有在执行中，如果有，那么就不在发送
   	 Vector up=(Vector)堆1上.get(0);
   	 if(up.get(8).equals("执行中")||up.get(8).equals("已发送")){run=true;}
     }
    
    if(堆2上.size()>0){
      	 //首先判断当前指令有没有在执行中，如果有，那么就不在发送
      	 Vector up=(Vector)堆2上.get(0);
      	 if(up.get(8).equals("执行中")||up.get(8).equals("已发送")){run2=true;}
        }
    
 if(!run) {
   	//如果没有运行中的指令,那么就优先上料，上完料了在看看有没有下货的指令，如果有运行下货
   	
   	try {
			String state=ClientSer.getIntance().getGD().getState(SqlPro.AGV1);//获取AGV1的状态
			if(state.equals("1")){
				 if(堆1上.size()>0){
			    	 //首先判断当前指令有没有在执行中，如果有，那么就不在发送
			    	 Vector up=(Vector)堆1上.get(0);
			    	 String eventID=up.get(0).toString();
			    	 String fromID=up.get(5).toString();
			    	 String toID=up.get(6).toString();
			    	 ClientSer.getIntance().getGD().toBackBuffer(Integer.parseInt(eventID), 
			    			 Integer.parseInt(fromID), Integer.parseInt(toID));
			    	 String sql2="update 立库动作指令  set 状态='已发送',发送时间="+SqlPro.getDate()[1]+" where idEvent="+"'"+eventID+"'"; 
			    	 SqlTool.insert(new String[]{sql2});
			      }
				
			}
		   } catch (Exception e) {}
  
      }
	
 //////////////////////////////////////////////////////////////////////////////////////////////////////////
 
       if(!run2) {
       	//如果没有运行中的指令,那么就优先上料，上完料了在看看有没有下货的指令，如果有运行下货
       	
       	try {
   			String state=ClientSer.getIntance().getGD().getState(SqlPro.AGV2);//获取AGV2的状态
   			if(state.equals("1")){
   				//首先判断当前指令有没有在执行中，如果有，那么就不在发送
			    	 Vector up=(Vector)堆2上.get(0);
			    	 String eventID=up.get(0).toString();
			    	 String fromID=up.get(5).toString();
			    	 String toID=up.get(6).toString();
			    	 ClientSer.getIntance().getGD().toBackBuffer(Integer.parseInt(eventID), 
			    			 Integer.parseInt(fromID), Integer.parseInt(toID));
			    	 String sql2="update 立库动作指令  set 状态='已发送',发送时间="+SqlPro.getDate()[1]+" where idEvent="+"'"+eventID+"'"; 
			    	 SqlTool.insert(new String[]{sql2});
   				
   			}
   		   } catch (Exception e) {}
       
          }
   	

  
   
    }
	
}
